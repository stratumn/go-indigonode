// Copyright Â© 2017-2018 Stratumn SAS
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

import "github.com/stratumn/alice/grpc/ext/ext.proto";
import "github.com/stratumn/alice/app/indigo/pb/store/segment.proto";

package stratumn.alice.app.indigo.grpc.store;

option go_package = "github.com/stratumn/alice/app/indigo/grpc/store;store";

// The Indigo Store service definition.
service IndigoStore {
    // Get store information.
    rpc GetInfo(InfoReq) returns (InfoResp) {
        option (stratumn.alice.grpc.ext.method_desc) = "Get information about the Indigo Store service";
    }

    // Create a link.
    rpc CreateLink(stratumn.alice.app.indigo.pb.store.Link) returns (stratumn.alice.app.indigo.pb.store.LinkHash) {
        option (stratumn.alice.grpc.ext.method_desc) = "Create a new link";
    }

    // Get a segment.
    rpc GetSegment(stratumn.alice.app.indigo.pb.store.LinkHash) returns (stratumn.alice.app.indigo.pb.store.Segment) {
        option (stratumn.alice.grpc.ext.method_desc) = "Get an existing segment from its link hash";
    }

    // Find segments.
    rpc FindSegments(SegmentFilter) returns (stratumn.alice.app.indigo.pb.store.Segments) {
        option (stratumn.alice.grpc.ext.method_desc) = "Find existing segments";
    }

    // Get map IDs.
    rpc GetMapIDs(MapFilter) returns (MapIDs) {
        option (stratumn.alice.grpc.ext.method_desc) = "Get existing map IDs";
    }

    // Add evidence to a segment.
    rpc AddEvidence(AddEvidenceReq) returns (AddEvidenceResp) {
        option (stratumn.alice.grpc.ext.method_desc) = "Add evidence to a segment";
    }

    // Get segment evidences.
    rpc GetEvidences(stratumn.alice.app.indigo.pb.store.LinkHash) returns (stratumn.alice.app.indigo.pb.store.Evidences) {
        option (stratumn.alice.grpc.ext.method_desc) = "Get segment evidences";
    }
}

message InfoReq {
}

message InfoResp {
    bytes data = 1 [
        (stratumn.alice.grpc.ext.field_desc) = "JSON-encoded store information"
    ];
}

message SegmentFilter {
    bytes data = 1 [
        (stratumn.alice.grpc.ext.field_desc) = "JSON-encoded segment filter bytes"
    ];
}

message MapIDs {
    repeated string map_ids = 1 [
        (stratumn.alice.grpc.ext.field_desc) = "Map IDs"
    ];
}

message MapFilter {
    bytes data = 1 [
        (stratumn.alice.grpc.ext.field_desc) = "JSON-encoded map filter bytes"
    ];
}

message AddEvidenceReq {
    stratumn.alice.app.indigo.pb.store.LinkHash link_hash = 1 [
        (stratumn.alice.grpc.ext.field_desc) = "32-bytes link hash"
    ];
    stratumn.alice.app.indigo.pb.store.Evidence evidence = 2 [
        (stratumn.alice.grpc.ext.field_desc) = "JSON-encoded evidence bytes"
    ];
}

message AddEvidenceResp {
}
