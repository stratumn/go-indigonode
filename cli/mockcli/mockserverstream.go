// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/stratumn/alice/cli (interfaces: ServerStream)

package mockcli

import (
	gomock "github.com/golang/mock/gomock"
	proto "github.com/golang/protobuf/proto"
	reflect "reflect"
)

// MockServerStream is a mock of ServerStream interface
type MockServerStream struct {
	ctrl     *gomock.Controller
	recorder *MockServerStreamMockRecorder
}

// MockServerStreamMockRecorder is the mock recorder for MockServerStream
type MockServerStreamMockRecorder struct {
	mock *MockServerStream
}

// NewMockServerStream creates a new mock instance
func NewMockServerStream(ctrl *gomock.Controller) *MockServerStream {
	mock := &MockServerStream{ctrl: ctrl}
	mock.recorder = &MockServerStreamMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockServerStream) EXPECT() *MockServerStreamMockRecorder {
	return _m.recorder
}

// RecvMsg mocks base method
func (_m *MockServerStream) RecvMsg() (proto.Message, error) {
	ret := _m.ctrl.Call(_m, "RecvMsg")
	ret0, _ := ret[0].(proto.Message)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RecvMsg indicates an expected call of RecvMsg
func (_mr *MockServerStreamMockRecorder) RecvMsg() *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "RecvMsg", reflect.TypeOf((*MockServerStream)(nil).RecvMsg))
}
