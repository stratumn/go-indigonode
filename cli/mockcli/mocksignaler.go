// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/stratumn/alice/cli (interfaces: Signaler)

package mockcli

import (
	gomock "github.com/golang/mock/gomock"
	os "os"
	reflect "reflect"
)

// MockSignaler is a mock of Signaler interface
type MockSignaler struct {
	ctrl     *gomock.Controller
	recorder *MockSignalerMockRecorder
}

// MockSignalerMockRecorder is the mock recorder for MockSignaler
type MockSignalerMockRecorder struct {
	mock *MockSignaler
}

// NewMockSignaler creates a new mock instance
func NewMockSignaler(ctrl *gomock.Controller) *MockSignaler {
	mock := &MockSignaler{ctrl: ctrl}
	mock.recorder = &MockSignalerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockSignaler) EXPECT() *MockSignalerMockRecorder {
	return _m.recorder
}

// Signal mocks base method
func (_m *MockSignaler) Signal(_param0 os.Signal) error {
	ret := _m.ctrl.Call(_m, "Signal", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Signal indicates an expected call of Signal
func (_mr *MockSignalerMockRecorder) Signal(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "Signal", reflect.TypeOf((*MockSignaler)(nil).Signal), arg0)
}
