// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/stratumn/alice/core/protocol/coin/chain (interfaces: Writer)

package mockchain

import (
	gomock "github.com/golang/mock/gomock"
	coin "github.com/stratumn/alice/pb/coin"
	reflect "reflect"
)

// MockWriter is a mock of Writer interface
type MockWriter struct {
	ctrl     *gomock.Controller
	recorder *MockWriterMockRecorder
}

// MockWriterMockRecorder is the mock recorder for MockWriter
type MockWriterMockRecorder struct {
	mock *MockWriter
}

// NewMockWriter creates a new mock instance
func NewMockWriter(ctrl *gomock.Controller) *MockWriter {
	mock := &MockWriter{ctrl: ctrl}
	mock.recorder = &MockWriterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockWriter) EXPECT() *MockWriterMockRecorder {
	return _m.recorder
}

// AddBlock mocks base method
func (_m *MockWriter) AddBlock(_param0 *coin.Block) error {
	ret := _m.ctrl.Call(_m, "AddBlock", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddBlock indicates an expected call of AddBlock
func (_mr *MockWriterMockRecorder) AddBlock(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "AddBlock", reflect.TypeOf((*MockWriter)(nil).AddBlock), arg0)
}
