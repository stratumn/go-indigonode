// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/stratumn/alice/core/service/pruner (interfaces: Manager)

// Package mockpruner is a generated GoMock package.
package mockpruner

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockManager is a mock of Manager interface
type MockManager struct {
	ctrl     *gomock.Controller
	recorder *MockManagerMockRecorder
}

// MockManagerMockRecorder is the mock recorder for MockManager
type MockManagerMockRecorder struct {
	mock *MockManager
}

// NewMockManager creates a new mock instance
func NewMockManager(ctrl *gomock.Controller) *MockManager {
	mock := &MockManager{ctrl: ctrl}
	mock.recorder = &MockManagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockManager) EXPECT() *MockManagerMockRecorder {
	return m.recorder
}

// Prune mocks base method
func (m *MockManager) Prune() {
	m.ctrl.Call(m, "Prune")
}

// Prune indicates an expected call of Prune
func (mr *MockManagerMockRecorder) Prune() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Prune", reflect.TypeOf((*MockManager)(nil).Prune))
}
