// Copyright Â© 2017-2018 Stratumn SAS
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

import "github.com/stratumn/alice/grpc/ext/ext.proto";

package stratumn.alice.grpc.bootstrap;

option go_package = "github.com/stratumn/alice/grpc/bootstrap;bootstrap";

// The bootstrap service definition.
service Bootstrap {
  // Propose adding a node to the network.
  rpc AddNode (NodeIdentity) returns (Ack) {
    option (stratumn.alice.grpc.ext.method_desc) = "Propose adding a node to the network";
  }

  // Accept a proposal to add or remove a network node.
  rpc Accept (PeerID) returns (Ack) {
    option (stratumn.alice.grpc.ext.method_desc) = "Accept a proposal to add or remove a network node";
  }
}

// A message containing a proof of a node's identity.
message NodeIdentity {
    bytes peer_id = 1 [
        (stratumn.alice.grpc.ext.field_desc) = "Peer ID",
        (stratumn.alice.grpc.ext.field_required) = true,
        (stratumn.alice.grpc.ext.field_base58) = true
    ];
    bytes peer_addr = 2 [
        (stratumn.alice.grpc.ext.field_desc) = "Peer Address"
    ];
    bytes identity_proof = 3 [
        (stratumn.alice.grpc.ext.field_desc) = "KYC data (TBD)"
    ];
}

// A base58-encoded PeerId.
message PeerID {
    bytes peer_id = 1 [
        (stratumn.alice.grpc.ext.field_desc) = "Peer ID",
        (stratumn.alice.grpc.ext.field_required) = true,
        (stratumn.alice.grpc.ext.field_base58) = true
    ];
}

// An empty ack.
message Ack {
}