// Copyright Â© 2017-2018 Stratumn SAS
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

import "github.com/stratumn/alice/grpc/ext/ext.proto";

package stratumn.alice.grpc.manager;

option go_package = "github.com/stratumn/alice/grpc/manager;manager";

// The manager service definition.
service Manager {
  // Streams the registered services.
  rpc List (ListReq) returns (stream Service) {
    option (stratumn.alice.grpc.ext.method_desc) = "List all the available services";
  }

  // Starts a service.
  rpc Start (StartReq) returns (Service) {
    option (stratumn.alice.grpc.ext.method_desc) = "Start a service";
  }

  // Stops a service.
  rpc Stop (StopReq) returns (Service) {
    option (stratumn.alice.grpc.ext.method_desc) = "Stop a service";
  }

  // Prunes services.
  rpc Prune (PruneReq) returns (stream Service) {
    option (stratumn.alice.grpc.ext.method_desc) = "Prune unused services";
  }
}

// The list request message.
message ListReq {
}

// The start request message.
message StartReq {
  string id = 1 [
    (stratumn.alice.grpc.ext.field_required) = true,
    (stratumn.alice.grpc.ext.field_desc) = "Service ID"
  ];
}

// The stop request message.
message StopReq {
  string id = 1 [
    (stratumn.alice.grpc.ext.field_required) = true,
    (stratumn.alice.grpc.ext.field_desc) = "Service ID"
  ];
  bool prune = 2 [
    (stratumn.alice.grpc.ext.field_desc) = "Prune services after stopping the service"
  ];
}

// The prune request message.
message PruneReq {
}

// The service message containing information about a service.
message Service {
  string id = 1;
  enum Status {
      STOPPED = 0;
      STARTING = 1;
      RUNNING = 2;
      STOPPING = 3;
      ERRORED = 4;
  }
  Status status = 2;
  repeated string needs = 3;
  bool stoppable = 4;
  bool prunable = 5;
  string name = 6;
  string desc = 7;
}
